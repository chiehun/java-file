/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.46
 * Generated at: 2020-09-25 01:45:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reservation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1600991812481L));
    _jspx_dependants.put("jar:file:/C:/hun_web/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/hairshop_two/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("jar:file:/C:/hun_web/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/hairshop_two/WEB-INF/lib/standard.jar!/META-INF/fmt.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Hairshop Customer Page</title>\r\n");
      out.write("\r\n");
      out.write("<!-- 제이쿼리 모바일, 제이쿼리 라이브러리 파일 -->\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.7.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- 제이쿼리 ui css -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- Date picker(제이쿼리 ui) -->\r\n");
      out.write("<script src=\"//code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css\" />\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Time picker -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"jquery.timepicker.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"jquery.timepicker.min.css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!-- 스크립트 추가 내용 -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\tvar date = new Date();\r\n");
      out.write("\tvar year = date.getFullYear();\r\n");
      out.write("\tvar month = date.getMonth() + 1; // 1~12가 아니라 0~11로 반환되므로 +1\r\n");
      out.write("\tvar day = date.getDate();\r\n");
      out.write("\tvar hours = date.getHours();\r\n");
      out.write("\tvar minutes = date.getMinutes();\r\n");
      out.write("\tvar today = year + \"-\" + month + \"-\" + day;\r\n");
      out.write("\tconsole.log(today);\r\n");
      out.write("\t/*-------------------date picker---------------------------------*/\r\n");
      out.write("\t\r\n");
      out.write("\t$.datepicker.setDefaults({\r\n");
      out.write("        dateFormat: 'yy-mm-dd',\t\r\n");
      out.write("        monthNames: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\r\n");
      out.write("        monthNamesShort: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\r\n");
      out.write("        dayNames: ['일', '월', '화', '수', '목', '금', '토'],\t//한글 캘린더 요일 표시 부분\r\n");
      out.write("        dayNamesShort: ['일', '월', '화', '수', '목', '금', '토'],\t//한글 요일 표시 부분\r\n");
      out.write("        dayNamesMin: ['일', '월', '화', '수', '목', '금', '토'],\t// 한글 요일 표시 부분\r\n");
      out.write("        showMonthAfterYear: true,\t// true : 년 월  false : 월 년 순으로 보여줌\r\n");
      out.write("        yearSuffix: '년',\t\r\n");
      out.write("//\t        showButtonPanel: true,\t// 오늘로 가는 버튼과 달력 닫기 버튼 보기 옵션\r\n");
      out.write("//\t        closeText: '닫기', // 닫기 버튼 텍스트 변경\r\n");
      out.write("//\t        currentText: '오늘', // 오늘 텍스트 변경\r\n");
      out.write("    });\r\n");
      out.write("\t\r\n");
      out.write("\t$('#rev_date').datepicker({\r\n");
      out.write("\t\tmaxDate : '+1m',\r\n");
      out.write("\t\tminDate : '0'\t// 예약가능 날짜는 당일부터 한달뒤까지만\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t$('#rev_date').datepicker(\"setDate\", \"today\"); // 기본값 세팅\r\n");
      out.write("\r\n");
      out.write("\t/*-------------------time picker---------------------------------*/\r\n");
      out.write("\r\n");
      out.write("\t// hours\r\n");
      out.write("\tif(hours >19 || hours <10){\r\n");
      out.write("\t\thours = 10;\r\n");
      out.write("\t\tminutes = '00';\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\t// minutes 30분 단위 반올림\r\n");
      out.write("\t\tif(minutes == 0){\r\n");
      out.write("\t\t\tminutes = '00';\r\n");
      out.write("\t\t} else if(minutes < 30) {\r\n");
      out.write("\t\t\tminutes = 30;\r\n");
      out.write("\t\t} else if(minutes > 30){\r\n");
      out.write("\t\t\tminutes = '00';\r\n");
      out.write("\t\t\tif(hours != 10 || hours != 20){\r\n");
      out.write("\t\t\t\thours +=1;\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t} // hours, minutes 설정 완료\r\n");
      out.write("\t\r\n");
      out.write("\t// timepicker 설정\r\n");
      out.write("\t$('#rev_time').timepicker({\r\n");
      out.write("\t\tminTime : hours +\":\"+ minutes,\r\n");
      out.write("\t\tmaxTime : '20:00', // 마지막 예약가능 시간\r\n");
      out.write("\t\ttimeFormat : 'h:i a',\r\n");
      out.write("\t\tstep : 30, // 30분 단위로 지정.\r\n");
      out.write("\t\tdropdown : true, // 드롭다운 표시 여부\r\n");
      out.write("\t\tuseSelect : true, // select 형태로 사용 -> 사용자가 임의로 입력시간 조절불가\r\n");
      out.write("//\t\tdisableTimeRanges : [ [ '1pm', '2pm' ], [ '3pm', '4:01 pm' ] ] // 막아놓을 시간 설정\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 예약하기 화면 -->\r\n");
      out.write("\t<div data-role=\"page\">\r\n");
      out.write("\t\t<div data-role=\"header\" data-position=\"fixed\" data-theme=\"b\">\r\n");
      out.write("\t\t\t<a href=\"#\" data-icon=\"back\" data-rel=\"back\" data-direction=\"reverse\">Back</a>\r\n");
      out.write("\t\t\t<h1>HairShop</h1>\r\n");
      out.write("\t\t\t<a href=\"HairshopServlet?command=cus_index\" data-icon=\"home\" data-iconpos=\"notext\"\r\n");
      out.write("\t\t\t\tclass=\"ui-btn-right\">Home</a>\r\n");
      out.write("\t\t\t\t<div data-role=\"navbar\">\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div data-role=\"content\">\r\n");
      out.write("\t\t\t<div class=\"ui-body ui-body-a\">\r\n");
      out.write("\t\t\t<h3>예약</h3>\r\n");
      out.write("\t\t\t\t<form action=\"HairshopServlet?command=cus_res_insert\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<label><b>예약날짜 :</b></label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"rsv_date\" id=\"rev_date\" />\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<label><b>예약시간 :</b></label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"rsv_time\" id=\"rev_time\" />\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<label><b>시술종류 :</b></label>\r\n");
      out.write("\t\t\t\t\t<select name=\"p_type\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"cut\">커트</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"color\">염색</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"perm\">파마</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t<br /><br />\r\n");
      out.write("\t\t\t\t\t<input type=\"id\" name=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" value=\"예약등록\">\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t<div data-role=\"footer\" data-position=\"fixed\" data-theme=\"b\">\r\n");
      out.write("\t\t\t<h4>Reservation</h4>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /reservation.jsp(114,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.loginUser }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t<li><a href=\"HairshopServlet?command=cus_login_form\">로그인</a></li>\r\n");
          out.write("\t\t\t\t\t<li><a href=\"HairshopServlet?command=cus_join_form\">회원가입</a></li>\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t<li><a href=\"HairshopServlet?command=cus_logout\">로그아웃</a>\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
